### Default editor ###
# Konfiguracja-> Odznacz uzywanie wew. edytora
Open=%var{EDITOR:vim} %f
View=%var{EDITOR:vim} %f 

### GIT Repo ###
# gitfs changeset
regex/^\[git\]
	Open=%cd %p/changesetfs://
	View=%cd %p/patchsetfs://

### Archives ###

# .tgz, .tpz, .tar.gz, .tar.z, .tar.Z, .ipk, .gem
regex/\.t([gp]?z|ar\.g?[zZ])$|\.ipk$|\.gem$
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.gz

shell/.tar.bz
	# Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.bzip

regex/\.t(ar\.bz2|bz2?|b2)$
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.bzip2

# .tar.lzma, .tlz
regex/\.t(ar\.lzma|lz)$
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.lzma

# .tar.xz, .txz
regex/\.t(ar\.xz|xz)$
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.xz

# .tar.F - used in QNX
shell/.tar.F
	# Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.F

# .qpr/.qpk - QNX Neutrino package installer files
regex/\.qp[rk]$
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar.qpr

# tar
shell/i/.tar
	Open=%cd %p/utar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view tar

# lha
type/^LHa\ .*archive
	Open=%cd %p/ulha://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view lha

# arj
regex/i/\.a(rj|[0-9][0-9])$
	Open=%cd %p/uarj://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view arj

# cab
shell/i/.cab
	Open=%cd %p/ucab://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cab

# ha
shell/i/.ha
	Open=%cd %p/uha://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view ha

# rar
regex/i/\.r(ar|[0-9][0-9])$
	Open=%cd %p/urar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view rar

# ALZip
shell/i/.alz
	Open=%cd %p/ualz://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view alz

# cpio
shell/.cpio.Z
	Open=%cd %p/ucpio://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cpio.z

shell/.cpio.xz
	Open=%cd %p/ucpio://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cpio.xz

shell/.cpio.gz
	Open=%cd %p/ucpio://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cpio.gz

shell/i/.cpio
	Open=%cd %p/ucpio://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view cpio

# 7zip archives (they are not man pages)
shell/i/.7z
	Open=%cd %p/u7z://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view 7z

# patch
regex/\.(diff|patch)(\.bz2)$
	Open=%cd %p/patchfs://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view bz2

regex/\.(diff|patch)(\.(gz|Z))$
	Open=%cd %p/patchfs://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view gz

# ls-lR
regex/(^|\.)ls-?lR(\.gz|Z|bz2)$
	Open=%cd %p/lslR://

# trpm
shell/.trpm
	Open=%cd %p/trpm://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view trpm

# RPM packages (SuSE uses *.spm for source packages)
regex/\.(src\.rpm|spm)$
	Open=%cd %p/rpm://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view src.rpm

shell/.rpm
	Open=%cd %p/rpm://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view rpm

# deb
regex/\.u?deb$
	Open=%cd %p/deb://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view deb

# dpkg
shell/.debd
        Open=%cd %p/debd://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view debd

# apt
shell/.deba
        Open=%cd %p/deba://
	View=%view{ascii} /usr/lib/mc/ext.d/package.sh view deba

# ISO9660
shell/i/.iso
	Open=%cd %p/iso9660://
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view iso9660


regex/\.(diff|patch)$
	Open=%cd %p/patchfs://
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view cat

# ar library
regex/\.s?a$
	Open=%cd %p/uar://
	#Open=%view{ascii} ar tv %f
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view ar

# gplib
shell/i/.lib
	Open=%cd %p/ulib://
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view lib


# Mailboxes
type/^ASCII\ mail\ text
	Open=%cd %p/mailfs://


### Sources ###

regex/\.(c|cc|cpp|py|h|dat|log|txt|rc|ini|ext|sh|zshrc|conf|xml|md|o|vimrc|srt|log|html|cnf|cfg|asc|yaml|css|java|theme|bashrc|zshrc|lua|bak)$
	Open=%var{EDITOR:vim} %f

# Fortran
shell/i/.f
	Include=editor

# Assembler
regex/i/\.(s|asm)$
	Include=editor

include/editor
	Open=%var{EDITOR:editor} %f

# .so libraries
regex/\.(so|so\.[0-9\.]*)$
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view so

# Object
type/^ELF
	#Open=%var{PAGER:more} %f
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view elf

### Documentation ###

regex/\.(odt|ott|sxw|stw|ods|ots|sxc|stc|odp|otp|sxi|sti|odg|otg|sxd|std|odb|odf|sxm|odm|sxg)$
   Open=(libreoffice %f &)

# Texinfo
#regex/\.(te?xi|texinfo)$

# GNU Info page
type/^Info\ text
 	Open=/usr/lib/mc/ext.d/text.sh open info

shell/.info
	Open=/usr/lib/mc/ext.d/text.sh open info

# Exception: .3gp are video files not manual pages
shell/i/.3gp
	Include=video

# Manual page
regex/(([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])|\.man)$
	Open=/usr/lib/mc/ext.d/text.sh open man %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man %var{PAGER:more}

# Perl pod page
shell/.pod
	Open=/usr/lib/mc/ext.d/text.sh open pod %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view pod %var{PAGER:more}

# Troff with me macros.
# Exception - "read.me" is not a nroff file.
shell/read.me
	Open=
	View=

shell/.me
	Open=/usr/lib/mc/ext.d/text.sh open nroff.me %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view nroff.me %var{PAGER:more}

# Troff with ms macros.
shell/.ms
	Open=/usr/lib/mc/ext.d/text.sh open nroff.ms %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view nroff.ms %var{PAGER:more}

# Manual page - compressed
regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.g?[Zz]$
	Open=/usr/lib/mc/ext.d/text.sh open man.gz %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.gz %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.bz$
	Open=/usr/lib/mc/ext.d/text.sh open man.bz %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.bz %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.bz2$
	Open=/usr/lib/mc/ext.d/text.sh open man.bz2 %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.bz2 %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.lzma$
	Open=/usr/lib/mc/ext.d/text.sh open man.lzma %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.lzma %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.xz$
	Open=/usr/lib/mc/ext.d/text.sh open man.xz %var{PAGER:more}
	View=%view{ascii,nroff} /usr/lib/mc/ext.d/text.sh view man.xz %var{PAGER:more}

# CHM
shell/i/.chm
	Open=/usr/lib/mc/ext.d/text.sh open chm

### Images ###

regex/\.(png|jpg|gif)$
    Open=(feh --scale-down %f >/dev/null 2>&1 &)

type/^PC\ bitmap
	Include=image

type/^MNG
	Include=image

type/^TIFF
	Include=image

type/^PBM
	Include=image

type/^PGM
	Include=image

type/^PPM
	Include=image

type/^Netpbm
	Include=image

shell/.xcf
	Open=/usr/lib/mc/ext.d/image.sh open xcf

shell/.xbm
	Open=/usr/lib/mc/ext.d/image.sh open xbm

shell/.xpm
	Include=image
	View=/usr/lib/mc/ext.d/image.sh view xpm %f

shell/.ico
	Include=image

shell/i/.svg
	View=%view{ascii} /usr/lib/mc/ext.d/image.sh view svg
	Open=/usr/lib/mc/ext.d/image.sh open svg

### Sound files ###

regex/i/\.(wav|snd|voc|au|smp|aiff|snd|m4a|ape|aac|wv)$
	Open=/usr/lib/mc/ext.d/sound.sh open common

regex/i/\.(mod|s3m|xm|it|mtm|669|stm|ult|far)$
	Open=/usr/lib/mc/ext.d/sound.sh open mod

shell/i/.waw22
	Open=/usr/lib/mc/ext.d/sound.sh open wav22

regex/\.(odt|ott|sxw|stw|ods|ots|sxc|stc|odp|otp|sxi|sti|odg|otg|sxd|std|odb|odf|sxm|odm|sxg)$
  Open=(openoffice.org3 %f &)

regex/i/\.og[gax]$
	Open=/usr/lib/mc/ext.d/sound.sh open ogg
	View=%view{ascii} /usr/lib/mc/ext.d/sound.sh view ogg

regex/i/\.(spx|flac)$
	Open=/usr/lib/mc/ext.d/sound.sh open common

regex/i/\.(midi?|rmid?)$
	Open=/usr/lib/mc/ext.d/sound.sh open midi

shell/i/.wma
	Open=/usr/lib/mc/ext.d/sound.sh open wma
	View=%view{ascii} /usr/lib/mc/ext.d/sound.sh view wma


### Play lists ###

regex/i/\.(m3u|pls)$
	Open=/usr/lib/mc/ext.d/sound.sh open playlist


### Video ###

shell/i/.avi
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.mp4
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.divx
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.mpg
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.mpeg
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.mkv
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.rmvb
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.flv
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.wmv
  Open=(mpv %f >/dev/null 2>&1 &)

shell/i/.webm
  Open=(mpv %f >/dev/null 2>&1 &)

include/video
    Open=(mpv -really-quiet -noconsolecontrols %f >/dev/null 2>&1 &)

### Documents ###

# Postscript
type/^PostScript
	Open=/usr/lib/mc/ext.d/doc.sh open ps
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view ps

regex/\.(pdf)$
   Open=(zathura %f &)

# html
regex/i/\.html?$
	Open=/usr/lib/mc/ext.d/web.sh open html
	View=%view{ascii} /usr/lib/mc/ext.d/web.sh view html

# StarOffice 5.2
shell/.sdw
	Open=/usr/lib/mc/ext.d/doc.sh open ooffice

# StarOffice 6 and OpenOffice.org formats
regex/i/\.(odt|ott|sxw|stw|ods|ots|sxc|stc|odp|otp|sxi|sti|odg|otg|sxd|std|odb|odf|sxm|odm|sxg)$
	Open=/usr/lib/mc/ext.d/doc.sh open ooffice
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view odt

# AbiWord
shell/.abw
	Open=/usr/lib/mc/ext.d/doc.sh open abw

# Gnumeric
shell/i/.gnumeric
	Open=/usr/lib/mc/ext.d/doc.sh open gnumeric

# Microsoft Word Document
regex/i/\.(do[ct]|wri)$
	Open=/usr/lib/mc/ext.d/doc.sh open msdoc
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view msdoc
type/^Microsoft\ Word
	Open=/usr/lib/mc/ext.d/doc.sh open msdoc
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view msdoc

# RTF document
shell/i/.rtf
	Open=/usr/lib/mc/ext.d/doc.sh open msdoc

# Microsoft Excel Worksheet
regex/i/\.xl[sw]$
	Open=/usr/lib/mc/ext.d/doc.sh open msxls
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view msxls
type/^Microsoft\ Excel
	Open=/usr/lib/mc/ext.d/doc.sh open msxls
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view msxls

regex/i/\.(ppt|pps)$
	Open=/usr/lib/mc/ext.d/doc.sh open msppt
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view msppt

# Use OpenOffice.org to open any MS Office documents
type/^Microsoft\ Office\ Document
	Open=/usr/lib/mc/ext.d/doc.sh open ooffice

# Framemaker
type/^FrameMaker
	Open=/usr/lib/mc/ext.d/doc.sh open framemaker

# DVI
shell/i/.dvi
	Open=/usr/lib/mc/ext.d/doc.sh open dvi
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view dvi

# TeX
shell/i/.tex
	Include=editor

# DjVu
regex/i/\.djvu?$
	Open=/usr/lib/mc/ext.d/doc.sh open djvu
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view djvu

# Comic Books
regex/i/\.cb[zr]$
	Open=/usr/lib/mc/ext.d/doc.sh open comic

# Epub
shell/i/.epub
	Open=/usr/lib/mc/ext.d/doc.sh open epub
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view epub


### Miscellaneous ###

# Compiled Java classes
shell/.class
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view javaclass

# Makefile
regex/[Mm]akefile$
	Open=make -f %f %{Enter parameters}

# Imakefile
shell/Imakefile
	Open=/usr/lib/mc/ext.d/misc.sh open imakefile

# Makefile.PL (MakeMaker)
regex/^Makefile.(PL|pl)$
	Open=%var{PERL:perl} %f

# sqlite3.db
type/^SQLite 3.x database
	Open=/usr/lib/mc/ext.d/misc.sh open sqlite
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view sqlite

# dbf
shell/i/.dbf
	Open=/usr/lib/mc/ext.d/misc.sh open dbf
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view dbf

# REXX script
regex/\.(rexx?|cmd)$
       Open=rexx %f %{Enter parameters};echo "Press ENTER";read y

# Disk images for Commodore computers (VIC20, C64, C128)
shell/i/.d64
	Open=%cd %p/uc1541://
	View=%view{ascii} c1541 %f -list
	Extract=c1541 %f -extract

# Glade, a user interface designer for GTK+ and GNOME
shell/i/.glade
	Open=/usr/lib/mc/ext.d/misc.sh open glade

# Gettext Catalogs
shell/.mo
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view mo

# lyx
shell/i/.lyx
	Open=/usr/lib/mc/ext.d/misc.sh open lyx
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view lyx

# torrent
shell/i/.torrent
	View=%view{ascii} /usr/lib/mc/ext.d/misc.sh view torrent

### Plain compressed files ###

# ace
shell/i/.ace
	Open=%cd %p/uace://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view ace
	Extract=unace x %f

# arc
shell/i/.arc
	Open=%cd %p/uarc://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view arc
	Extract=arc x %f '*'
	Extract (with flags)=I=%{Enter any Arc flags:}; if test -n "$I"; then arc x $I %f; fi

# zip
shell/i/.zip
	Open=%cd %p/uzip://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view zip

# zip
type/i/^zip\ archive
	Open=%cd %p/uzip://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view zip

# jar(zip)
type/i/^Java\ Jar\ file\ data\ \(zip\)
	Open=%cd %p/uzip://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view zip

# zoo
shell/i/.zoo
	Open=%cd %p/uzoo://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view zoo

# gzip
type/^gzip
	Open=/usr/lib/mc/ext.d/archive.sh view gz %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view gz

regex/\.(gz|Z)$
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view gz

# bzip2
type/^bzip2
	Open=/usr/lib/mc/ext.d/archive.sh view bzip2 %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view bz2

regex/\.bz2?$
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view bz2

# bzip
type/^bzip
	Open=/usr/lib/mc/ext.d/archive.sh view bzip %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view bzip

# compress
type/^compress
	Open=/usr/lib/mc/ext.d/archive.sh view gz %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view gz

# lzma
regex/\.lzma$
	Open=/usr/lib/mc/ext.d/archive.sh view lzma %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view lzma

# xz
regex/\.xz$
	Open=/usr/lib/mc/ext.d/archive.sh view xz %var{PAGER:more}
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view xz

# Parity Archive
type/^Parity\ Archive\ Volume\ Set
	Open=/usr/lib/mc/ext.d/archive.sh open par2

### Default ###

# Default target for anything not described above
default/*
	Open=
	View=


### EOF ###
